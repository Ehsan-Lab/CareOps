rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() && request.auth.token.admin == true;
    }

    function isValidAmount() {
      return request.resource.data.amount is number && request.resource.data.amount > 0;
    }

    function hasValidTimestamps() {
      let hasCreatedAt = request.resource.data.createdAt is timestamp;
      let hasUpdatedAt = request.resource.data.updatedAt is timestamp;
      return hasCreatedAt && hasUpdatedAt;
    }

    // Common rules
    match /{document=**} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Specific collection rules
    match /donors/{donorId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /donations/{donationId} {
      allow read: if isSignedIn();
      allow write: if isAdmin() && isValidAmount() && hasValidTimestamps();
    }

    match /beneficiaries/{beneficiaryId} {
      allow read: if isSignedIn();
      allow write: if isAdmin() && hasValidTimestamps();
    }

    match /payments/{paymentId} {
      allow read: if isSignedIn();
      allow write: if isAdmin() && isValidAmount() && hasValidTimestamps();
    }

    match /feedingRounds/{roundId} {
      allow read: if isSignedIn();
      allow write: if isAdmin() && isValidAmount() && hasValidTimestamps();
    }

    match /treasury/{categoryId} {
      allow read: if isSignedIn();
      allow write: if isAdmin() && isValidAmount() && hasValidTimestamps();
    }

    match /transactions/{transactionId} {
      allow read: if isSignedIn();
      allow write: if isAdmin() && isValidAmount() && hasValidTimestamps();
    }
  }
}